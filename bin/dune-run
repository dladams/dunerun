#!/bin/bash
#
# dune-run
# David Adams
# March 2022
#
# A script to run  a command in a dunesw enviroment.

ENV=${DUNESW_SUPPORT_ENV:-dunesw}
REL=${DUNESW_SUPPORT_RELEASE:-v09_44_00_02}
LEVEL=0
while [[ $# -gt 0 ]]; do
  ARG=$1
  if [ "$ARG" = "-h" ]; then
    echo "Usage: $0 [-e ENV] [-r REL] [-d LEVEL] COM"
    echo "Runs command COM in the environment defined by \"source setup-ENV.sh REL\""
    echo "  ENV - Environment name."
    echo "        Provided here:"
    echo "          dune - Sets up dune w/o any packages."
    echo "          dunesw - Sets up dune w/ dunesw with argument REL"
    echo "          dunebuild - Sets up dunesw with argument REL plus packages"
    echo "                      needed to build other DUNE packages (cmake, studio)"
    echo "        If undefined or '.', the command is run without setup."
    echo "        Default is env variable DUNESW_SUPPORT_ENV or dunesw."
    echo "  REL - Release tag passed to the environment setup script."
    echo "        For dunesw, this can be"
    echo "          -- VERS or VERS:QUAL where VERS is the version and QUAL is the"
    echo "             qualifier (e.g. v09_42_03_00 or v09_42_03_00:c7:prof),"
    echo "          -- the path to file that sets up a local build or installation"
    echo "             of dunesw, or"
    echo "          -- the path to a directory holding a local build made with"
    echo "             dune-dev (See https://github.com/dladams/dune-dev)"
    echo "        Default is $DUNE_VERSION:$DUNE_QUALIFIER"
    echo "  LEVEL - 0 - Command is executed with no output from this script or"
    echo "              from the setup (default)"
    echo "          1 - Command is executed with informational messages."
    echo "          2 - Command and infomational messages are displayed w/o execution."
    echo "Command 'shell' starts an interactive bash shell in the environment."
    exit 0
  elif [ "$ARG" = "-r" ]; then
    shift
    REL=$1
    shift
  elif [ "$ARG" = "-e" ]; then
    shift
    ENV=$1
    shift
  elif [ "$ARG" = "-d" ]; then
    shift
    LEVEL=${1:-0}
    shift
  else
    COM="$@"
    break
  fi
done

MYNAME="dune-run: "
if [ $LEVEL -gt 0 ]; then
  echo "$MYNAME ENV: $ENV"
  echo "$MYNAME REL: $REL"
  echo "$MYNAME COM: $@"
fi


if [ "$COM" = shell ]; then
  if [ $LEVEL -gt 0 ]; then
    echo "$MYNAME Starting shell..."
  fi
  NEWPS1=$ENV
  if [ -n "$REL" ]; then
    NEWPS1=$NEWPS1-$REL
  fi
  NEWPS1=${NEWPS1}'> '
  if [ $LEVEL -gt 0 ]; then
    echo "$MYNAME Setting prompt $NEWPS1"
  fi
  bash --rcfile <(echo 'source dune-run -e '$ENV' -r '$REL'; export PS1="'$NEWPS1'"')

else

  if [ -n "$ENV" -a "$ENV" != "." ]; then
    SETUP_FILE=setup-$ENV.sh
    if [ $LEVEL -gt 0 ]; then echo $MYNAME Setting up.; fi
    if [ $LEVEL -eq 2 ]; then
       echo $MYNAME '>' source $SETUP_FILE $REL 2>&1 1>/dev/null
    elif [ $LEVEL -eq 0 ]; then
       source $SETUP_FILE $REL 2>&1 1>/dev/null
    else
      source $SETUP_FILE $REL
    fi
  fi

  if [ $# -gt 0 ]; then
    if [ $LEVEL -gt 0 ]; then echo $MYNAME Executing.; fi
    if [ $LEVEL -eq 2 ]; then
      echo $MYNAME '>' $@
    else
      if [ ${#@} > 0 ]; then
        $@
      fi
    fi
  fi

fi
